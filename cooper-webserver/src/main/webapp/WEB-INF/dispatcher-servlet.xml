<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 
	这里仅扫描标注为@Controller,@ControllerAdvice注解的SpringMVC控制类
	 -->
	<context:component-scan base-package="jdepend.webserver.web" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<!--
		This tag registers the DefaultAnnotationHandlerMapping and
		AnnotationMethodHandlerAdapter beans that are required for Spring MVC
		to dispatch requests to @Controllers. The tag configures those two
		beans with sensible defaults based on what is present in your
		classpath.
	-->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!--
		This tag is a shorcut for defining a ParameterizableViewController
		that immediately forwards to a view when invoked. Use it in static
		cases when there is no Java Controller logic to execute before the
		view generates the response.
	-->
	
	<!-- 定义无Controller的path<->view直接映射，例如：view-name="redirect:/index" -->
	<mvc:view-controller path="/" view-name="redirect:/upload" />
	
	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
	<mvc:default-servlet-handler />
	
	 <!-- 全局异常配置 start -->  
     <bean id="exceptionResolver" class="jdepend.webserver.web.CustomSimpleMappingExceptionResolver">  
         <property name="exceptionMappings">  
             <props>
				 <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>      
                 <prop key="java.lang.Throwable">error/500</prop>
             </props>  
         </property>  
         <property name="statusCodes">  
             <props>  
                 <prop key="500">500</prop>  
                 <prop key="404">404</prop>
                 <prop key="403">403</prop>  
             </props>  
         </property>  
         <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->  
         <property name="warnLogCategory" value="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"/>  
         <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->  
         <property name="defaultErrorView" value="error/500"/>  
         <!-- 默认HTTP状态码 ，返回错误默认设置的状态码-->  
         <property name="defaultStatusCode" value="200"/>  
     </bean>  
     <!-- 全局异常配置 end -->    

	<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 文件上传 --> 
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 指定所上传文件的总大小不能超过maxUploadSize（单位是字节）。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize">
			<value>52428800</value><!-- 上传文件大小限制为50M，50*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	

	
</beans>